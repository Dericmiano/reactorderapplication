{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Derick\\\\Desktop\\\\reactcourseNotes\\\\orderapp\\\\orderapp\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport React from \"react\";\nimport CartContext from \"./Cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex]; // let  updatedItem;\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      // updatedItem = {...action.item};\n      updatedItems = state.items.concat(action.item);\n    } // const updatedItems = state.items.concat(action.item);\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount == 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {}\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Derick/Desktop/reactcourseNotes/orderapp/orderapp/src/store/CartProvider.js"],"names":["useReducer","React","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AACA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CACzBJ,IAAD,IAASA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADP,CAA9B;AAGA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB,CANqB,CAQrB;;AAEA,QAAII,YAAJ;;AAEA,QAAID,gBAAJ,EAAqB;AACjB,YAAME,WAAW,GAAG,EAChB,GAAGF,gBADa;AAEhBJ,QAAAA,MAAM,EAACI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAF7B,OAApB;AAIAK,MAAAA,YAAY,GAAE,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAd;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACH,KAPD,MAOM;AACF;AACAD,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACH,KAtBoB,CAwBrB;;;AACA,WAAO;AACHP,MAAAA,KAAK,EAAEc,YADJ;AAEHb,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA4B;AAExB,UAAMK,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CACzBJ,IAAD,IAASA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACQ,EADF,CAA9B;AAEA,UAAMK,YAAY,GAAGd,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAArB;AACA,UAAMJ,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBgB,YAAY,CAACT,KAA5D;AAEA,QAAIM,YAAJ;;AACA,QAAIG,YAAY,CAACR,MAAb,IAAuB,CAA3B,EAA6B;AACzBK,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAmBX,IAAI,IAAGA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACQ,EAA7C,CAAf;AACH,KAFD,MAEM,CAEL;AAEJ;;AACD,SAAOb,gBAAP;AACH,CA/CD;;AAgDA,MAAMoB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAgC1B,UAAU,CAACM,WAAD,EAAcH,gBAAd,CAAhD;;AACA,QAAMwB,oBAAoB,GAAIhB,IAAD,IAAU;AACnCe,IAAAA,kBAAkB,CAAC;AAACjB,MAAAA,IAAI,EAAC,KAAN;AAAYE,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMiB,yBAAyB,GAAIZ,EAAD,IAAQ;AACtCU,IAAAA,kBAAkB,CAAC;AAACjB,MAAAA,IAAI,EAAC,QAAN;AAAgBO,MAAAA,EAAE,EAACA;AAAnB,KAAD,CAAlB;AAEH,GAHD;;AAIA,QAAMa,WAAW,GAAE;AACfzB,IAAAA,KAAK,EAACqB,SAAS,CAACrB,KADD;AAEfC,IAAAA,WAAW,EAAEoB,SAAS,CAACpB,WAFR;AAGfyB,IAAAA,OAAO,EAAEH,oBAHM;AAIfI,IAAAA,UAAU,EAACH;AAJI,GAAnB;AAMA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAtBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import {useReducer} from \"react\";\r\nimport React from \"react\";\r\nimport CartContext from \"./Cart-context\";\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD'){\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) =>item.id === action.item.id);\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        // let  updatedItem;\r\n\r\n        let updatedItems;\r\n\r\n        if (existingCartItem){\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount:existingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems =[...state.items];\r\n            updatedItems[existingCartItemIndex] = updatedItem;\r\n        }else {\r\n            // updatedItem = {...action.item};\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n        // const updatedItems = state.items.concat(action.item);\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n    if(action.type === 'REMOVE'){\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) =>item.id === action.id);\r\n        const existingItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount - existingItem.price\r\n\r\n        let updatedItems;\r\n        if (existingItem.amount == 1){\r\n            updatedItems = state.items.filter(item=> item.id !== action.id);\r\n        }else {\r\n\r\n        }\r\n\r\n    }\r\n    return defaultCartState;\r\n}\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction]=useReducer(cartReducer, defaultCartState);\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type:'ADD',item:item});\r\n    }\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type:'REMOVE', id:id});\r\n\r\n    }\r\n    const cartContext ={\r\n        items:cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem:removeItemFromCartHandler\r\n    };\r\n    return(\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n\r\n        </CartContext.Provider>\r\n    )\r\n\r\n}\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}